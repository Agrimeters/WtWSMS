###############################
# Foederati events
#
# Written by Loup
#
# WtWSMS_foederati.1 -> WtWSMS_foederati.28
###############################

namespace = WtWSMS_foederati

###############################
# Foederati negotiations
###############################

# Romans accept or refuse to start negotiating with barbarian
character_event = {
	id = WtWSMS_foederati.1
	desc = WtWSMS_foederati.1.desc
	picture = GFX_evt_emissary
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			save_event_target_as = barbarian_negotiator
		}
		ROOT = {
			save_event_target_as = roman_negotiator
		}
	}
	
	option = { # Yes
		name = WtWSMS_foederati.1.a
		ai_chance = {
			#Option A modifiers
			# AI should generally accept
		}
		custom_tooltip = {
			text = WtWSMS_foederati.1.a.tooltip # Negotiations begin
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.2 # Negotiations begin - settle in empire or not?
				days = 7
				random = 3
			}
		}
	}
    option = { # No, negotiations break
		name = WtWSMS_foederati.1.b
		ai_chance = {
			#Option B modifiers
			# In case the Barbarian is menacing or otherwise too hostile
		}
		custom_tooltip = {
			text = WtWSMS_foederati.1.b.tooltip # Negotiations do not start, risk of war
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
				days = 7
				random = 3
			}
		}
	}
}

# Negotiations begin - settle in empire or not?
character_event = {
    id = WtWSMS_foederati.2
	desc = WtWSMS_foederati.2.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Yes
		name = WtWSMS_foederati.2.a
		ai_chance = {
			#Option A modifiers
			# Feeling threatened
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.3 # Barbarian negotiator wishes to settle in the empire
				days = 7
				random = 3
			}
		}
	}
	option = { # No
		name = WtWSMS_foederati.2.b
		ai_chance = {
			#Option B modifiers
			# More likely if the Romans are approaching
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.11 # Barbarian negotiator does not wish to settle in the empire
				days = 7
				random = 3
			}
		}
	}
}	

# Barbarian negotiator wishes to settle in the empire
character_event = {
    id = WtWSMS_foederati.3
	desc = WtWSMS_foederati.3.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Accept it and offer a territory
		name = WtWSMS_foederati.3.a
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.3.a.tooltip # Offering territory
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.4 # Pick a territory to offer
			}			
			set_character_flag = offered_territory_flag
		}
	}
	option = { # Accept it and promise a territory
		name = WtWSMS_foederati.3.b
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.3.b.tooltip # Promising territory
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.7 # Pick a territory to promise
			}
			set_character_flag = promised_territory_to_@event_target:barbarian_negotiator_flag
		}
	}
	option = { # Refuse to grant territory within the empire, offer to settle outside it
		name = WtWSMS_foederati.3.c
		ai_chance = {
			#Option C modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.3.c.tooltip # Settle outside counter-offer
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.10 # Makes the offer to settle outside it
			}
		}
		event_target:roman_negotiator = {
			set_character_flag = settling_outside_empire_flag
		}
	}
}	

# Pick a territory to offer
character_event = {
    id = WtWSMS_foederati.4
	desc = WtWSMS_foederati.4.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes
	
	immediate = {
		random_realm_title = {
		    limit = {
				tier = duke
				is_titular = no # Dejure duchy
				any_de_jure_vassal = { # Vassal county of the duchy
					is_capital = no # Don't want to hand out the capital duchy
					location = {
						any_neighbor_province = {
							holder_scope = {
								OR = { 
									character = event_target:barbarian_negotiator # Any dejure vassal county of the duchy has a neighbouring county which is held by event_target:barbarian_negotiator
									AND = { # Any dejure vassal county of the duchy has a neighbouring county which is not held by event_target:barbarian_negotiator but still not in the realm
										NOT = { character = event_target:barbarian_negotiator } 
										NOT = { same_realm = event_target:roman_negotiator } 	
									}
								}
							}
						}
					}
				}
    		}
			save_event_target_as = offered_territory
		} 
	}

	option = { # Pick suggested territory
		name = WtWSMS_foederati.4.a
		trigger = {
			NOT = {
				has_character_flag = enforcing_demands
			}
		}
		custom_tooltip = {
			text = WtWSMS_foederati.4.a.tooltip # Proposing offered_territory to barbarian_negotiator
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.5 # Makes the offer
				days = 7
				random = 3
			}
		}
	}
	option = { # Enforcing demands
		name = WtWSMS_foederati.4.b
		trigger = {
			has_character_flag = enforcing_demands
		}
		custom_tooltip = {
			text = WtWSMS_foederati.4.b.tooltip # Settle barbarian_negotiator in offered_territory
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.21 # Victorious Roman enforcing demands upon barbarian
			}
		}
	}
	option = { # Find another one than the suggested, reloads same event
		name = WtWSMS_foederati.4.c
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = WtWSMS_foederati.4.c.tooltip # Look for another territory
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.4 # Pick a territory to offer
			}
		}
		clear_event_target = offered_territory
	}
}

# Makes the offer
character_event = {
    id = WtWSMS_foederati.5
	desc = WtWSMS_foederati.5.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Accept the offer
		name = WtWSMS_foederati.5.a
		ai_chance = {
			#Option A modifiers
			# Less likely to accept if counter-offer
		}
		custom_tooltip = {
			text = WtWSMS_foederati.5.a.tooltip # Negotiations successful
		}
		event_target:barbarian_negotiator = {
			character_event = { 				
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
			}
			any_realm_province = { # Set flag to give away land
				limit = {
					NOT = { has_province_flag = foederati_give_away }
				}
				set_province_flag = foederati_give_away
			}
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
				days = 7
				random = 3
			}
		}
	}
	option = { # Refuse the offer
		name = WtWSMS_foederati.5.b
		ai_chance = {
			#Option B modifiers
			# More likely to refuse if counter-offer
		}
		custom_tooltip = {
			text = WtWSMS_foederati.5.b.tooltip # Offer refused
		}
		clear_event_target = offered_territory
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.6 # Barbarian refuses province offer
				days = 7
				random = 3
			}
		}
	}
}	

# Barbarian refuses province offer
character_event = {
    id = WtWSMS_foederati.6
	desc = WtWSMS_foederati.6.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Pick another territory to offer
		name = WtWSMS_foederati.6.a
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.6.a.tooltip # Offer another territory
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.4 # Pick a territory to offer
			}
		}
	}
	option = { 	# Break negotiations
		name = WtWSMS_foederati.6.b
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.6.b.tooltip # Negotiations break
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
				days = 7
				random = 3
			}
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
			}
		}
	}
}

# Pick a territory to promise
character_event = {
    id = WtWSMS_foederati.7
	desc = WtWSMS_foederati.7.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes
	
	immediate = {
		random_realm_title = {
		    limit = {
				tier = duke
				is_titular = no # Dejure duchy
				any_de_jure_vassal = { # Vassal county of the duchy
					is_capital = no # Don't want to hand out the capital duchy
					location = {
						any_neighbor_province = {
							holder_scope = {
								OR = { 
									character = event_target:barbarian_negotiator # Any dejure vassal county of the duchy has a neighbouring county which is held by event_target:barbarian_negotiator
									AND = { # Any dejure vassal county of the duchy has a neighbouring county which is not held by event_target:barbarian_negotiator but still not in the realm
										NOT = { character = event_target:barbarian_negotiator } 
										NOT = { same_realm = event_target:roman_negotiator } 	
									}
								}
							}
						}
					}
				}
    		}
			save_event_target_as = promised_territory
		} 
	}

	option = { # Pick suggested territory
		name = WtWSMS_foederati.7.a
		custom_tooltip = {
			text = WtWSMS_foederati.7.a.tooltip # Promising promised_territory to barbarian_negotiator
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.8 # Makes the promise
				days = 7
				random = 3
			}
		}
	}
	option = { # Find another one than the suggested, reloads same event
		name = WtWSMS_foederati.7.b
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = WtWSMS_foederati.7.b.tooltip # Look for another territory
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.7 # Pick a territory to promise
			}
		}
		clear_event_target = promised_territory
	}
}

# Makes the promise
character_event = {
    id = WtWSMS_foederati.8
	desc = WtWSMS_foederati.8.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Accept the promise
		name = WtWSMS_foederati.8.a
		ai_chance = {
			#Option A modifiers
			# Less likely to accept if counter-offer
		}
		custom_tooltip = {
			text = WtWSMS_foederati.8.a.tooltip # Negotiations successful
		}
		event_target:barbarian_negotiator = {
			character_event = { 				
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
			}
			any_realm_province = { # Set flag to give away land
				limit = {
					NOT = { has_province_flag = foederati_give_away }
				}
				set_province_flag = foederati_give_away
			}
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
				days = 7
				random = 3
			}
		}
	}
	option = { # Refuse the promise
		name = WtWSMS_foederati.8.b
		ai_chance = {
			#Option B modifiers
			# More likely to refuse if counter-offer
		}
		custom_tooltip = {
			text = WtWSMS_foederati.5.b.tooltip # Offer refused
		}
		clear_event_target = promised_territory
		event_target:roman_negotiator = {
			character_event = {
				id = WtWSMS_foederati.9 # Barbarian refuses province promise
				days = 7
				random = 3
			}
		}
	}
}	

# Barbarian refuses province promise
character_event = {
    id = WtWSMS_foederati.9
	desc = WtWSMS_foederati.9.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Pick another territory to promise
		name = WtWSMS_foederati.9.a
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.9.a.tooltip # Promise another territory
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.7 # Pick a territory to promise
			}
		}
	}
	option = { 	# Break negotiations
		name = WtWSMS_foederati.9.b
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.9.b.tooltip # Negotiations break
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
				days = 7
				random = 3
			}
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
			}
		}
	}
}
	
# Makes the offer to settle outside it
character_event = {
    id = WtWSMS_foederati.10
	desc = WtWSMS_foederati.10.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Barbarian accepts
		name = WtWSMS_foederati.10.a
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.10.a.tooltip # Negotiations successful
		}
		event_target:barbarian_negotiator = {
			character_event = { 				
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
			}
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
				days = 7
				random = 3
			}
		}
	}
	option = { # Barbarian refuses
		name = WtWSMS_foederati.10.b
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.10.b.tooltip # Negotiations break
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
			}
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
				days = 7
				random = 3
			}
		}
	}
}
	
# Barbarian negotiator does not wish to settle in the empire
character_event = {
    id = WtWSMS_foederati.11
	desc = WtWSMS_foederati.11.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Accept it 
		name = WtWSMS_foederati.11.a
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.11.a.tooltip # Settle outside
		}
		event_target:roman_negotiator = {
			set_character_flag = settling_outside_empire_flag
		}		
		event_target:barbarian_negotiator = {
			character_event = { 				
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
				days = 7
				random = 3
			}
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.13 # Negotiations successful, with both parties having accepted
			}
		}	
	}
	option = { # Refuse it, offer a territory to settle within the empire
		name = WtWSMS_foederati.11.b
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.11.b.tooltip # Offering territory counter-offer
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.4 # Pick a territory to offer
			}			
			set_character_flag = offered_territory_flag
			set_character_flag = counter_offer
		}
	}
	option = { # Refuse it, promise a territory to settle within the empire
		name = WtWSMS_foederati.11.c
		ai_chance = {
			#Option C modifiers
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.7 # Pick a territory to promise
			}
			set_character_flag = promised_territory_to_@event_target:barbarian_negotiator_flag
			set_character_flag = counter_offer
		}
	}
}

# Negotiations break
character_event = {
    id = WtWSMS_foederati.12
	desc = WtWSMS_foederati.12.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes
	
	immediate = {
		event_target:roman_negotiator = {
			opinion = {
				modifier = opinion_broken_foederati_negotiations
				who = event_target:barbarian_negotiator
			}
		}
		event_target:barbarian_negotiator = {
			opinion = {
				modifier = opinion_broken_foederati_negotiations
				who = event_target:roman_negotiator
			}
		}
		if = {
			limit = { 
				has_character_flag = offered_territory_flag
			}
			clr_character_flag = offered_territory_flag
		}
		if = {
			limit = { 
				has_character_flag = promised_territory_to_@event_target:barbarian_negotiator_flag
			}
			clr_character_flag = promised_territory_to_@event_target:barbarian_negotiator_flag
		}
		if = {
			limit = { 
				has_character_flag = settling_outside_empire_flag
			}
			clr_character_flag = settling_outside_empire_flag
		}
	}

	option = { # OK
		name = WtWSMS_foederati.12.a
		ai_chance = {
			#Option A modifiers
		}
		prestige = -50
	}
	option = { # Romans declare war upon Barbarians impose their demands after failed negotiations
		name = WtWSMS_foederati.12.b
		trigger = {
			has_romance_culture_trigger = yes # Is Roman
		}
		ai_chance = {
			#Option B modifiers
		}	
		custom_tooltip = {
			text = WtWSMS_foederati.12.b.tooltip # War
		}
		war = {
			target = event_target:barbarian_negotiator 
			casus_belli = tributary_foederati_cb 
			infamy = 0
		}
	}
	option = { # Barbarians declare war upon Romans to impose their demands after failed negotiations
		name = WtWSMS_foederati.12.c
		trigger = {
			any_neighbor_independent_ruler = { # Is Barbarian
				primary_title = { higher_tier_than = DUKE }
				has_romance_culture_trigger = yes
				mercenary = no
				holy_order = no
			}
		}
		ai_chance = {
			#Option C modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.12.c.tooltip # War
		}
		if = {
			limit = {
				AND = {
					NOT = { year = 800 } # The migration period ended around 800
					event_target:barbarian_negotiator = {
						OR = {
							religion = tengri_pagan
							religion = slavic_pagan
							religion = germanic_pagan
							culture = alan
						}
						NOT = { has_character_modifier = launched_migration_war }
						NOT = { higher_tier_than = KING } # No Emperors
						NOT = { culture = FROM }
						independent = yes # No vassals
						war = no # Ensures that the events activate correctly  
					}
					event_target:roman_negotiator = {
						independent = yes
						war = no
					}
				}
			}
			war = {
				target = event_target:roman_negotiator
				casus_belli = migration
				infamy = 0
			}
		}
		else = {
			war = {
				target = event_target:roman_negotiator
				casus_belli = tribal_invasion
				infamy = 0
			}
		}
	}
}

# Negotiations successful, with both parties having accepted
character_event = {
    id = WtWSMS_foederati.13
	desc = WtWSMS_foederati.13.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes
	
	immediate = {
		event_target:roman_negotiator = {
			opinion = {
				modifier = opinion_successful_foederati_negotiations
				who = event_target:barbarian_negotiator
			}
		}
		event_target:barbarian_negotiator = {
			opinion = {
				modifier = opinion_successful_foederati_negotiations
				who = event_target:roman_negotiator
			}
		}
	}

	option = { # Excellent!
		name = WtWSMS_foederati.13.a
		ai_chance = {
			#Option A modifiers
		}
		prestige = 50
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.14 # Becomes foederati after sucessful negotiations and gets land
			}
		}
	}
}

# Becomes foederati after successful negotiations and gets land
character_event = {
    id = WtWSMS_foederati.14
	desc = WtWSMS_foederati.14.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes
	
	immediate = {
		event_target:roman_negotiator = {
			make_tributary = {
				who = event_target:barbarian_negotiator
				tributary_type = foederati
			}
			event_target:barbarian_negotiator = {
				sound_effect = grace_gain
				add_character_modifier = {
					name = become_foederati_timer
					duration = 3600
				}
			}
		}
	}

	option = { # Welcome!
		name = WtWSMS_foederati.14.a
		trigger = {
			has_character_flag = offered_territory_flag
		}
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.14.a.tooltip # Grant land
		}
		event_target:barbarian_negotiator = {
			any_realm_province = { # Give away old lands
				limit = {
					has_province_flag = foederati_give_away
				}
				county = {
					create_character = {
						random_traits = yes
						dynasty = none
						religion = PREV
						culture = PREV
						female = no
						age = 25
						trait = peasant_leader
					}
					new_character = {
						usurp_title_plus_barony_if_unlanded = PREV
						set_defacto_liege = THIS
						set_truce = {
							who = ROOT
							years = 10
						}
						ROOT = {
							set_truce = {
								who = PREV
								years = 10
							}
						}
					}
				}
				clr_province_flag = foederati_give_away
			}
			event_target:offered_territory = { # Grant offered land
				any_de_jure_vassal_title = { # Vassal county of the duchy
					limit = {
						tier = COUNT
					}
					grant_title	= event_target:barbarian_negotiator
				}
			}
			any_demesne_title = {
				limit = {
					OR = { 
						tier = DUKE
						tier = KING
					}
				}
				destroy_landed_title = THIS
			}
			create_title = { # Create new titular duchy
				tier = DUKE
				landless = no
				temporary = no
				custom_created = yes
				culture = event_target:barbarian_negotiator
				holder = event_target:barbarian_negotiator
				name = "FOEDERATI_DUCHY"
				base_title = PREV
			}
			if = { # Change government from tribal to feudal
				limit = {
					is_tribal = yes
				}
				set_government_type	= feudal_government
			}
			clr_character_flag = offered_territory_flag
			clear_event_target = offered_territory
		}
	}
	option = { # All in due time...
		name = WtWSMS_foederati.14.b
		trigger = {
			has_character_flag = promised_territory_to_@event_target:barbarian_negotiator_flag
		}
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.14.b.tooltip # Promised land
		}
		event_target:barbarian_negotiator = { 
			character_event = { 				
				id = WtWSMS_foederati.15 # Barbarian reminded of promise
				days = 1825 # Five years
			}
		}
		# Custom tooltip to explain new event in a few years to follow up the promise
	}
	option = { # Protect the border
		name = WtWSMS_foederati.14.c
		trigger = {
			has_character_flag = settling_outside_empire_flag
		}
		ai_chance = {
			#Option C modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.14.c.tooltip # Outside empire
		}
		clr_character_flag = settling_outside_empire_flag
	}
}

# Barbarian reminded of promise
character_event = {
    id = WtWSMS_foederati.15
	desc = WtWSMS_foederati.15.desc
	picture = GFX_evt_emissary

    is_triggered_only = yes
	
	option = { # Ask for promised territory
		name = WtWSMS_foederati.15.a
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.15.a.tooltip # Remind Roman
		}
		event_target:roman_negotiator = {
			character_event = { 				
				id = WtWSMS_foederati.16 # Barbarian reminds Roman of promise
				days = 7
				random = 3
			}
		}
	}
	option = { # Wait more without asking, reloads same event after five years
		name = WtWSMS_foederati.15.b
		trigger = {
			ai = no # Too easy otherwise to trick AI
		}
		custom_tooltip = {
			text = WtWSMS_foederati.15.b.tooltip # Wait and see
		}
		prestige = -50
		event_target:barbarian_negotiator = { 
			character_event = { 				
				id = WtWSMS_foederati.15 # Barbarian reminded of promise
				days = 1825 # Five years
			}
		}
	}
}

# Barbarian reminds Roman of promise
character_event = {
    id = WtWSMS_foederati.16
	desc = WtWSMS_foederati.16.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Grant promised territory
		name = WtWSMS_foederati.16.a
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.16.a.tooltip # Grant land
		}
		event_target:barbarian_negotiator = {
			any_realm_province = { # Give away old lands
				limit = {
					has_province_flag = foederati_give_away
				}
				county = {
					create_character = {
						random_traits = yes
						dynasty = none
						religion = PREV
						culture = PREV
						female = no
						age = 25
						trait = peasant_leader
					}
					new_character = {
						usurp_title_plus_barony_if_unlanded = PREV
						set_defacto_liege = THIS
						set_truce = {
							who = ROOT
							years = 10
						}
						ROOT = {
							set_truce = {
								who = PREV
								years = 10
							}
						}
					}
				}
				clr_province_flag = foederati_give_away
			}
			event_target:offered_territory = { # Grant offered land
				any_de_jure_vassal_title = { # Vassal county of the duchy
					limit = {
						tier = COUNT
					}
					grant_title	= event_target:barbarian_negotiator
				}
			}			
			any_demesne_title = {
				limit = {
					OR = { 
						tier = DUKE
						tier = KING
					}
				}
				destroy_landed_title = THIS
			}
			create_title = { # Create new titular duchy
				tier = DUKE
				landless = no
				temporary = no
				custom_created = yes
				culture = event_target:barbarian_negotiator
				holder = event_target:barbarian_negotiator
				name = "FOEDERATI_DUCHY"
				base_title = PREV
			}
			if = { # Change government from tribal to feudal
				limit = {
					is_tribal = yes
				}
				set_government_type	= feudal_government
			}
			clear_event_target = promised_territory
		}
		event_target:roman_negotiator = {
			clr_character_flag = promised_territory_to_@event_target:barbarian_negotiator_flag
		}
	}
	option = { # Attempt to delay further
		name = WtWSMS_foederati.16.b
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.16.b.tooltip # Delay further
		}
		event_target:barbarian_negotiator = {
			character_event = { 				
				id = WtWSMS_foederati.18 # Postponed territory promise
				days = 7
				random = 3
			}
		}
	}
	option = { # Break promise
		name = WtWSMS_foederati.16.c
		ai_chance = {
			#Option B modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.16.c.tooltip # Break pledge
		}
		event_target:barbarian_negotiator = {
			character_event = { 				
				id = WtWSMS_foederati.17 # Broken territory promise
				days = 7
				random = 3
			}
			clear_event_target = promised_territory
		}
		event_target:roman_negotiator = {
			clr_character_flag = promised_territory_to_@event_target:barbarian_negotiator_flag
		}
	}
	option = { # War to impose concessions
		name = WtWSMS_foederati.16.d
		ai_chance = {
			#Option C modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.16.d.tooltip # War
		}
		war = {
			target = event_target:barbarian_negotiator 
			casus_belli = tributary_foederati_cb 
			infamy = 0
		}
		event_target:roman_negotiator = {
			remove_tributary = event_target:barbarian_negotiator
		}
	}
}

# Broken territory promise
character_event = {
    id = WtWSMS_foederati.17
	desc = WtWSMS_foederati.17.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Then war it is
		name = WtWSMS_foederati.17.a		
		custom_tooltip = {
			text = WtWSMS_foederati.17.a.tooltip # War
		}
		if = {
			limit = {
				AND = {
					NOT = { year = 800 } # The migration period ended around 800
					event_target:barbarian_negotiator = {
						OR = {
							religion = tengri_pagan
							religion = slavic_pagan
							religion = germanic_pagan
							culture = alan
						}
						NOT = { has_character_modifier = launched_migration_war }
						NOT = { higher_tier_than = KING } # No Emperors
						NOT = { culture = FROM }
						independent = yes # No vassals
						war = no # Ensures that the events activate correctly  
					}
					event_target:roman_negotiator = {
						independent = yes
						war = no
					}
				}
			}
			war = {
				target = event_target:roman_negotiator
				casus_belli = migration
				infamy = 0
			}
		}
		else = {
			war = {
				target = event_target:roman_negotiator
				casus_belli = tribal_invasion
				infamy = 0
			}
		}
		event_target:roman_negotiator = {
			remove_tributary = event_target:barbarian_negotiator
		}
	}
}

# Postponed territory promise
character_event = {
    id = WtWSMS_foederati.18
	desc = WtWSMS_foederati.18.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Then war it is
		name = WtWSMS_foederati.18.a
		ai_chance = {
			#Option A modifiers
		}	
		custom_tooltip = {
			text = WtWSMS_foederati.18.a.tooltip # War
		}
		if = {
			limit = {
				AND = {
					NOT = { year = 800 } # The migration period ended around 800
					event_target:barbarian_negotiator = {
						OR = {
							religion = tengri_pagan
							religion = slavic_pagan
							religion = germanic_pagan
							culture = alan
						}
						NOT = { has_character_modifier = launched_migration_war }
						NOT = { higher_tier_than = KING } # No Emperors
						NOT = { culture = FROM }
						independent = yes # No vassals
						war = no # Ensures that the events activate correctly  
					}
					event_target:roman_negotiator = {
						independent = yes
						war = no
					}
				}
			}
			war = {
				target = event_target:roman_negotiator
				casus_belli = migration
				infamy = 0
			}
		}
		else = {
			war = {
				target = event_target:roman_negotiator
				casus_belli = tribal_invasion
				infamy = 0
			}
		}
		event_target:roman_negotiator = {
			remove_tributary = event_target:barbarian_negotiator
		}
	}
	option = { # Wait and see
		name = WtWSMS_foederati.18.b
		ai_chance = {
			#Option A modifiers
		}
		custom_tooltip = {
			text = WtWSMS_foederati.18.b.tooltip # Wait and see
		}		
		prestige = -50
		event_target:barbarian_negotiator = { 
			character_event = { 				
				id = WtWSMS_foederati.15 # Barbarian reminded of promise
				days = 1825 # Five years
			}
		}
	}
}

# Barbarian accept or refuse to start negotiating with Roman
character_event = {
	id = WtWSMS_foederati.19
	desc = WtWSMS_foederati.19.desc
	picture = GFX_evt_emissary
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			save_event_target_as = roman_negotiator
		}
		ROOT = {
			save_event_target_as = barbarian_negotiator
		}
	}
	
	option = { # Yes
		name = WtWSMS_foederati.19.a
		ai_chance = {
			#Option A modifiers
		}
		event_target:barbarian_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.2 # Negotiations begin - settle in empire or not?
			}
		}
	}
    option = { # No, negotiations break
		name = WtWSMS_foederati.19.b
		ai_chance = {
			#Option B modifiers
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = WtWSMS_foederati.12 # Negotiations break
				days = 7
				random = 3
			}
		}
	}
}

# Victorious Roman force barbarians into foederati status after enforcing demands
character_event = {
    id = WtWSMS_foederati.20
	desc = WtWSMS_foederati.20.desc
	picture = GFX_evt_emissary
	
	is_triggered_only = yes # On_actions event
	
	only_playable = yes
	only_independent = yes
	
	trigger = {
		FROM = { # Attacker
			independent = yes
			mercenary = no
			holy_order = no
			is_landed = yes
			NOR = {
				primary_title = { higher_tier_than = KING }
				has_romance_culture_trigger = yes
				bureaucratic_government_trigger = yes
				sassanid_government_trigger = yes
			}
		}
		ROOT = { # Defender
			independent = yes
			mercenary = no
			holy_order = no
			is_landed = yes
			primary_title = { higher_tier_than = DUKE }
			has_romance_culture_trigger = yes
		}
	}
	
	immediate = {
		FROM = {
			save_event_target_as = barbarian_negotiator
		}
		ROOT = {
			save_event_target_as = roman_negotiator
			set_character_flag = enforcing_demands
		}
	}

	option = { # Settle in the empire
		name = WtWSMS_foederati.20.a
		ai_chance = {
			#Option A modifiers
		}
		event_target:roman_negotiator = {
			character_event = {
				id = WtWSMS_foederati.4 # Pick a territory to offer
			}
			set_character_flag = offered_territory_flag
		}
	}
	option = { # Settle outside the empire
		name = WtWSMS_foederati.20.b
		ai_chance = {
			#Option B modifiers
		}
		event_target:roman_negotiator = {
			character_event = {
				id = WtWSMS_foederati.21 # Victorious Roman enforcing demands upon barbarian
			}
			set_character_flag = settling_outside_empire_flag
		}
	}
	option = { # Let them be for now
		name = WtWSMS_foederati.20.c
		ai_chance = {
			#Option C modifiers
		}
	}
}

# Victorious Roman enforcing demands upon barbarian
character_event = {
    id = WtWSMS_foederati.21
	desc = WtWSMS_foederati.21.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	immediate = {
		event_target:roman_negotiator = {
			make_tributary = {
				who = event_target:barbarian_negotiator
				tributary_type = foederati
			}
			event_target:barbarian_negotiator = {
				sound_effect = grace_gain
				add_character_modifier = {
					name = become_foederati_timer
					duration = 3600
				}
			}
		}
	}

	option = { # Welcome!
		name = WtWSMS_foederati.21.a
		trigger = {
			has_character_flag = offered_territory_flag
		}
		ai_chance = {
			#Option A modifiers
		}
		event_target:barbarian_negotiator = {
			any_realm_province = { # Give away old lands
				limit = {
					has_province_flag = foederati_give_away
				}
				county = {
					create_character = {
						random_traits = yes
						dynasty = none
						religion = PREV
						culture = PREV
						female = no
						age = 25
						trait = peasant_leader
					}
					new_character = {
						usurp_title_plus_barony_if_unlanded = PREV
						set_defacto_liege = THIS
						set_truce = {
							who = ROOT
							years = 10
						}
						ROOT = {
							set_truce = {
								who = PREV
								years = 10
							}
						}
					}
				}
				clr_province_flag = foederati_give_away
			}
			event_target:offered_territory = { # Grant offered land
				any_de_jure_vassal_title = { # Vassal county of the duchy
					limit = {
						tier = COUNT
					}
					grant_title	= event_target:barbarian_negotiator
				}
			}
			any_demesne_title = {
				limit = {
					OR = { 
						tier = DUKE
						tier = KING
					}
				}
				destroy_landed_title = THIS
			}
			create_title = { # Create new titular duchy
				tier = DUKE
				landless = no
				temporary = no
				custom_created = yes
				culture = event_target:barbarian_negotiator
				holder = event_target:barbarian_negotiator
				name = "FOEDERATI_DUCHY"
				base_title = PREV
			}
			if = { # Change government from tribal to feudal
				limit = {
					is_tribal = yes
				}
				set_government_type	= feudal_government
			}
			clr_character_flag = offered_territory_flag
			clear_event_target = offered_territory
		}
	}
	option = { # Protect the border
		name = WtWSMS_foederati.21.b
		trigger = {
			has_character_flag = settling_outside_empire_flag
		}
		ai_chance = {
			#Option C modifiers
		}
		clr_character_flag = settling_outside_empire_flag
	}
}

# Barbarians can open foederati negotiations with the Romans after white peace
character_event = {
    id = WtWSMS_foederati.22
	desc = WtWSMS_foederati.22.desc
	picture = GFX_evt_emissary
	
	is_triggered_only = yes # On_actions event
	
	only_playable = yes
	only_independent = yes
	
	trigger = {
		FROM = { # Attacker
			independent = yes
			mercenary = no
			holy_order = no
			is_landed = yes
			NOR = {
				primary_title = { higher_tier_than = KING }
				has_romance_culture_trigger = yes
				bureaucratic_government_trigger = yes
				sassanid_government_trigger = yes
			}
		}
		ROOT = { # Defender
			independent = yes
			mercenary = no
			holy_order = no
			is_landed = yes
			primary_title = { higher_tier_than = DUKE }
			has_romance_culture_trigger = yes
		}
		independent = yes
		mercenary = no
		holy_order = no
		is_landed = yes
		NOR = {
			primary_title = { higher_tier_than = KING }
			has_romance_culture_trigger = yes
			bureaucratic_government_trigger = yes
			sassanid_government_trigger = yes
		}
	}
	
	immediate = {
		FROM = {
			save_event_target_as = barbarian_negotiator
		}
		ROOT = {
			save_event_target_as = roman_negotiator
		}
	}

	option = { # Open negotiations
		name = WtWSMS_foederati.22.a
		ai_chance = {
			#Option A modifiers
		}
		event_target:roman_negotiator = {
			character_event = { 
				id = id = WtWSMS_foederati.1 # Romans accept or refuse to start negotiating with barbarian
				days = 7
				random = 3
			}
		}
	}
	option = { # Refuse to open negotiations
		name = WtWSMS_foederati.22.b
		ai_chance = {
			#Option B modifiers
		}
	}
}

###############################
# Death of foederati
###############################

# Following the death of the foederati ruler, the new one has the choice to leave
character_event = {
    id = WtWSMS_foederati.23
	desc = WtWSMS_foederati.23.desc
	picture = GFX_evt_emissary
	
	is_triggered_only = yes # On_actions event
	
	only_playable = yes
	only_independent = yes
	
	trigger = {
		is_playable = yes
		is_tributary = {
			type = foederati
		}
	}
	
	option = { # Remain foederati
		name = WtWSMS_foederati.23.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				war = yes
				any_war = { defender = { character = ROOT } }
			}
			modifier = {
				factor = 1.5
				suzerain = {
					any_realm_province = { any_neighbor_province = { owner = { same_realm = ROOT } } }
				}
			}
			modifier = {
				factor = 1.5
				trait = craven
			}
			modifier = {
				factor = 1.5
				trait = content
			}
			modifier = {
				factor = 1.5
				trait = humble
			}
			modifier = {
				factor = 2
				suzerain = {
					OR = {
						dynasty = ROOT
						is_allied_with = ROOT
						is_friend = ROOT
					}
				}
			}
		}
	}
	# Renegotiate option?
	option = { # Leave
		name = WtWSMS_foederati.23.b
		trigger = {
			is_adult = yes
			NOT = { trait = incapable }
			prisoner = no
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				suzerain = {
					any_realm_province = { any_neighbor_province = { owner = { same_realm = ROOT } } }
					realm_levy_diff = { who = ROOT value = 5000 }
				}
			}
			modifier = {
				factor = 2
				suzerain = {
					is_rival = ROOT
				}
			}
			modifier = {
				factor = 1.5
				suzerain = {
					NOT = {
						any_realm_province = { any_neighbor_province = { owner = { same_realm = ROOT } } }
					}
				}
			}
			modifier = {
				factor = 1.5
				trait = brave
			}
			modifier = {
				factor = 1.5
				trait = ambitious
			}
			modifier = {
				factor = 1.5
				trait = proud
			}
			modifier = {
				factor = 1.5
				suzerain = { reverse_realm_levy_diff = { who = ROOT value = 10000 } }
			}
			modifier = {
				factor = 1.5
				suzerain = { reverse_realm_levy_diff = { who = ROOT value = 7500 } }
			}
			modifier = {
				factor = 1.5
				suzerain = { reverse_realm_levy_diff = { who = ROOT value = 5000 } }
			}
			modifier = {
				factor = 1.25
				suzerain = { reverse_realm_levy_diff = { who = ROOT value = 1000 } }
			}
			modifier = {
				factor = 0.5
				suzerain = { realm_levy_diff = { who = ROOT value = 5000 } }
			}
			modifier = {
				factor = 0.5
				suzerain = { realm_levy_diff = { who = ROOT value = 7500 } }
			}
			modifier = {
				factor = 0.5
				suzerain = { realm_levy_diff = { who = ROOT value = 10000 } }
			}
		}
		suzerain = { 
			remove_tributary = PREV
			character_event = { 
				id = WtWSMS_foederati.24 
				days = 7
				random = 3
			}
		}
	}
}

# Foederati decides to not renew the contract
character_event = {
	id = WtWSMS_foederati.24
	desc = WtWSMS_foederati.24.desc
	picture = GFX_evt_emissary

	is_triggered_only = yes
	
	option = {
		name = WtWSMS_foederati.24.a # Let them go
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				war = yes
			}
			modifier = {
				factor = 2
				NOT = { any_realm_province = { any_neighbor_province = { owner = { same_realm = FROM } } } }
			}
			modifier = {
				factor = 2
				reverse_realm_levy_diff = { who = FROM value = 100 }
			}
			modifier = {
				factor = 2
				reverse_realm_levy_diff = { who = FROM value = 2500 }
			}
			modifier = {
				factor = 1.25
				trait = patient
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 1.25
				trait = content
			}
			modifier = {
				factor = 1.25
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = craven
			}
		}
		opinion = { who = FROM modifier = opinion_outraged years = 10 }
	}
	option = {
		name = WtWSMS_foederati.24.b # Attack them
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				realm_levy_diff = { who = FROM value = 2500 }
			}
			modifier = {
				factor = 1.5
				realm_levy_diff = { who = FROM value = 5000 }
			}
			modifier = {
				factor = 2
				realm_levy_diff = { who = FROM value = 10000 }
			}
			modifier = {
				factor = 0
				reverse_realm_levy_diff = { who = FROM value = 5000 }
			}
			modifier = {
				factor = 1.25
				trait = wroth
			}
			modifier = {
				factor = 1.25
				trait = proud
			}
			modifier = {
				factor = 1.25
				trait = ambitious
			}
			modifier = {
				factor = 0.5
				NOT = { any_realm_province = { any_neighbor_province = { owner = { same_realm = FROM } } } }
			}
		}
		war = {
			target = FROM
			casus_belli = tributary_foederati_cb
		}
	}
}

###############################
# Foederati vassalisation
###############################

# Turn foederati into vassal by force diploaction
character_event = {
    id = WtWSMS_foederati.25
	desc = WtWSMS_foederati.25.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Vassalise
		name = WtWSMS_foederati.25.a
		ai_chance = {
			#Option A modifiers
		}
		set_defacto_liege = FROM
		suzerain = {
			remove_tributary = PREV
			character_event = {
				id = WtWSMS_foederati.26 # Foederati accepts to become vassal
				days = 7
				random = 3
			} 
		}
	}
	option = { # Refuse 
		name = WtWSMS_foederati.25.b
		ai_chance = {
			#Option B modifiers
		}
		suzerain = {
			remove_tributary = PREV
			character_event = { 
				id = WtWSMS_foederati.27 # Foederati refuses to accept demands
				days = 7
				random = 3
			} 
		}
	}
}

# Foederati accepts to become vassal
character_event = {
    id = WtWSMS_foederati.26
	desc = WtWSMS_foederati.26.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Excellent!
		name = WtWSMS_foederati.26.a
		prestige = 100
	}
}

# Foederati refuses to accept demands
character_event = {
    id = WtWSMS_foederati.27
	desc = WtWSMS_foederati.27.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # War it is
		name = WtWSMS_foederati.27.a
		ai_chance = {
			#Option A modifiers
		}
		if = {
			limit = {
				has_dlc = Jade_Dragon
			}
			war = {
				target = FROM
				casus_belli = force_vassalization
			}
		}
		else = {
			war = {
				target = FROM
				casus_belli = pagan_subjugation # To test
			}
		}
	}
	option = { # Accept their independence
		name = WtWSMS_foederati.27.b
		ai_chance = {
			#Option B modifiers
			# If foederati is unusually mighty
		}
		prestige = -100
		FROM = { 
			character_event = { 
				id = WtWSMS_foederati.28 # Foederati refuses to accept demands
				days = 7
				random = 3
			}
		}
	}
}

# Former suzerain concedes
character_event = {
    id = WtWSMS_foederati.28
	desc = WtWSMS_foederati.28.desc
	picture = GFX_evt_emissary
	
    is_triggered_only = yes

	option = { # Weaklings!
		name = WtWSMS_foederati.28.a
		prestige = 50
	}
}
